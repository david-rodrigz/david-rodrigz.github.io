---
import Button from "./ui/button.astro";
---

<form
    action=""
    method="POST"
    id="form"
    class="needs-validation"
    novalidate>
    <input type="hidden" name="access_key" value="YOUR_ACCESS_KEY_HERE" />
    <!-- Create your free access key from https://web3forms.com/ -->
    <input type="checkbox" class="hidden" style="display:none" name="botcheck" />
    <div class="mb-3">
        <input
        type="text"
        placeholder="Full Name"
        required
        class="w-full px-4 py-2 border-2 placeholder:text-gray-500 rounded-md outline-hidden focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
        name="name"
        />
        <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
        Please provide your full name.
        </div>
    </div>
    <div class="mb-3">
        <label for="email_address" class="sr-only">Email Address</label><input
        id="email_address"
        type="email"
        placeholder="Email Address"
        name="email"
        required
        class="w-full px-4 py-2 border-2 placeholder:text-gray-500 rounded-md outline-hidden focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
        />
        <div class="empty-feedback text-red-400 text-sm mt-1">
        Please provide your email address.
        </div>
        <div class="invalid-feedback text-red-400 text-sm mt-1">
        Please provide a valid email address.
        </div>
    </div>
    <!-- Phone Number -->
    <div class="mb-3">
        <input
        type="tel"
        placeholder="Phone Number"
        required
        maxlength="14"
        class="w-full px-4 py-2 border-2 placeholder:text-gray-500 rounded-md outline-hidden focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
        name="phone"
        id="phone"
        pattern="\(\d{3}\) \d{3}-\d{4}"
        />
        <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
        Please provide your phone number.
        </div>
    </div>

    <!-- Address -->
    <div class="mb-3">
        <input
        type="text"
        placeholder="Address"
        required
        class="w-full px-4 py-2 border-2 placeholder:text-gray-500 rounded-md outline-hidden focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
        name="address"
        />
        <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
        Please provide your address.
        </div>
    </div>

    <!-- City -->
    <div class="mb-3">
        <input
        type="text"
        placeholder="City"
        required
        class="w-full px-4 py-2 border-2 placeholder:text-gray-500 rounded-md outline-hidden focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
        name="city"
        />
        <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
        Please provide your city.
        </div>
    </div>

    <!-- State (Idaho) -->
    <div class="mb-3">
        <select
        name="state"
        required
        class="appearance-none w-full px-4 py-2 border-2 rounded-md outline-hidden focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100 bg-gray-100 text-gray-800"
        disabled
        >
            <option value="Idaho" selected>Idaho</option>
        </select>
        <input type="hidden" name="state" value="Idaho" />
    </div>

    <!-- Service Type Dropdown -->
    <div class="relative mb-3">
        <select
        name="service_type"
        required
        class="appearance-none w-full px-4 py-2 border-2 rounded-md outline-hidden focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100 text-gray-800"
        >
            <option value="" disabled selected>Select Service Type</option>
            <option value="Residential Roofing">Residential Roofing</option>
            <option value="Commercial Roofing">Commercial Roofing</option>
            <option value="Repairs & Maintenance">Repairs & Maintenance</option>
        </select>
        <div class="pointer-events-none absolute inset-y-0 right-3 flex items-center">
            <svg class="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" d="M19 9l-7 7-7-7" />
            </svg>
        </div>
        <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
        Please select a service type.
        </div>
    </div>
    <Button type="submit" size="md" class="cursor-pointer font-semibold" block>SUBMIT</Button>
    <div id="result" class="mt-3 text-center"></div>
</form>

<style>
    .invalid-feedback,
    .empty-feedback {
        display: none;
    }

    .was-validated :placeholder-shown:invalid ~ .empty-feedback {
        display: block;
    }

    .was-validated :not(:placeholder-shown):invalid ~ .invalid-feedback {
        display: block;
    }

    .is-invalid,
    .was-validated :invalid {
        border-color: #dc3545;
  }
</style>

<script is:inline>
    const form = document.getElementById("form");
    const result = document.getElementById("result");

    form.addEventListener("submit", function (e) {
        e.preventDefault();
        form.classList.add("was-validated");
        if (!form.checkValidity()) {
            form.querySelectorAll(":invalid")[0].focus();
            return;
        }
        const formData = new FormData(form);
        const object = Object.fromEntries(formData);
        const json = JSON.stringify(object);

        result.innerHTML = "Sending...";

        fetch("https://api.web3forms.com/submit", {
        method: "POST",
        headers: {
            "Content-Type": "application/json",
            Accept: "application/json",
        },
        body: json,
        })
        .then(async (response) => {
            let json = await response.json();
            if (response.status == 200) {
            result.classList.add("text-green-500");
            result.innerHTML = json.message;
            } else {
            console.log(response);
            result.classList.add("text-red-500");
            result.innerHTML = json.message;
            }
        })
        .catch((error) => {
            console.log(error);
            result.innerHTML = "Something went wrong!";
        })
        .then(function () {
            form.reset();
            form.classList.remove("was-validated");
            setTimeout(() => {
            result.style.display = "none";
            }, 5000);
        });
    });
</script>
